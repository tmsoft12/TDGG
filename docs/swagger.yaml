definitions:
  controllers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  controllers.HomePageResponse:
    properties:
      Last Locations:
        items:
          $ref: '#/definitions/models.DeviceSchema'
        type: array
      Status:
        items:
          $ref: '#/definitions/models.StatusCount'
        type: array
    type: object
  controllers.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.DeviceAll:
    properties:
      batteryLevel:
        type: integer
      deviceId:
        type: string
      isLocked:
        type: boolean
      signalStatus:
        type: string
      status:
        type: string
    type: object
  models.DeviceLocation:
    properties:
      latitude:
        type: number
      longitude:
        type: number
      timestamp:
        type: integer
    type: object
  models.DeviceLocationRequest:
    properties:
      device_id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
    type: object
  models.DeviceSchema:
    properties:
      batteryLevel:
        type: integer
      deviceId:
        type: string
      isLocked:
        type: boolean
      location:
        $ref: '#/definitions/models.DeviceLocation'
      signalStatus:
        type: string
      status:
        type: string
    type: object
  models.Driver:
    properties:
      car_model:
        type: string
      car_number:
        type: string
      country:
        type: string
      create_time:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      weight:
        type: integer
    type: object
  models.StatusCount:
    properties:
      count:
        type: integer
      status:
        type: string
    type: object
  models.User:
    properties:
      id:
        type: integer
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/admin/allusers:
    get:
      description: Retrieve all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Users
      tags:
      - Admin
  /api/admin/createuser:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create User
      tags:
      - Admin
  /api/admin/delete/{id}:
    delete:
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: User deleted
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete User
      tags:
      - Admin
  /api/admin/getuser/{id}:
    get:
      description: Retrieve a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get User By ID
      tags:
      - Admin
  /api/admin/update/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: User updated
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update User
      tags:
      - Admin
  /api/device/all_device:
    get:
      description: Get all devices
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DeviceAll'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all devices
      tags:
      - Devices
  /api/device/last_locations:
    get:
      description: Get all devices with their last known location
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DeviceSchema'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all devices with their last known location
      tags:
      - Devices
  /api/device/location_list/{id}:
    get:
      description: Get all locations for a specific device
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DeviceLocation'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get device locations
      tags:
      - Devices
  /api/device/locations:
    post:
      consumes:
      - application/json
      description: Add a new location entry for a device
      parameters:
      - description: Device location
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/models.DeviceLocationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Location added successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Add device location
      tags:
      - Devices
  /api/driver/all_driver:
    get:
      description: Get all devices
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Driver'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all drivers
      tags:
      - Drivers
  /api/driver/create_driver:
    post:
      consumes:
      - application/json
      description: Create a new driver
      parameters:
      - description: Driver
        in: body
        name: driver
        required: true
        schema:
          $ref: '#/definitions/models.Driver'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Driver'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create Driver
      tags:
      - Drivers
  /api/driver/delete_driver/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a driver by ID
      parameters:
      - description: Driver ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete Driver
      tags:
      - Drivers
  /api/driver/get_driver/{id}:
    get:
      description: Retrieve a driver by ID
      parameters:
      - description: Driver ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Driver'
        "404":
          description: Driver not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get Driver By ID
      tags:
      - Drivers
  /api/driver/update_driver/{id}:
    put:
      consumes:
      - application/json
      description: Update a driver's details by ID
      parameters:
      - description: Driver ID
        in: path
        name: id
        required: true
        type: integer
      - description: Driver
        in: body
        name: driver
        required: true
        schema:
          $ref: '#/definitions/models.Driver'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Driver'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update Driver
      tags:
      - Drivers
  /api/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login Input
        in: body
        name: loginInput
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid username or password
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Login
      tags:
      - User
  /api/main:
    get:
      consumes:
      - application/json
      description: Retrieves the count of devices grouped by their status and the
        latest location of each device
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.HomePageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get device status counts and latest locations
      tags:
      - devices
swagger: "2.0"
