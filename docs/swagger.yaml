basePath: /
definitions:
  controllers.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.User:
    properties:
      id:
        type: integer
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is a sample server for a Fiber API.
  title: Fiber Swagger Example API
  version: "1.0"
paths:
  /admin/login:
    post:
      consumes:
      - application/json
      description: Login by username and password
      parameters:
      - description: Login input
        in: body
        name: loginInput
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - auth
  /admin/users:
    get:
      description: Get details of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with the given details
      parameters:
      - description: User input
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new user
      tags:
      - users
  /admin/users/{id}:
    delete:
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a user
      tags:
      - users
    get:
      description: Get details of a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update details of an existing user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User input
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update an existing user
      tags:
      - users
swagger: "2.0"
